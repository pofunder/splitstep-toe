# -----------------------------  pyproject.toml  ------------------------------

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

# --------------------------------------------------------------------------- #
#  Project metadata                                                           #
# --------------------------------------------------------------------------- #
[project]
name            = "splitstep-toe"
dynamic         = ["version"]               # read from splitstep_toe/__init__.py
description     = "Numerical sandbox for a (tongue-in-cheek) ‘Theory of Everything’"
readme          = "README.md"
requires-python = ">=3.9"
license         = {text = "MIT"}
authors         = [{name = "You & ChatGPT", email = "noreply@example.org"}]
classifiers     = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Physics",
]

dependencies = [
  "numpy>=1.23",
  "scipy>=1.12",
  "numba>=0.61",
]

[project.optional-dependencies]
test      = ["pytest>=8.1", "pytest-xdist", "ruff", "black"]
notebooks = ["matplotlib>=3.8", "pandas>=2.0", "jupyter", "nbconvert"]

# --------------------------------------------------------------------------- #
#  Setuptools package discovery                                               #
# --------------------------------------------------------------------------- #
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "splitstep_toe.__version__"}

# --------------------------------------------------------------------------- #
#  Formatting & linting                                                       #
# --------------------------------------------------------------------------- #
[tool.black]
line-length = 88
target-version = ["py39", "py310"]

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "I", "N", "NPY", "W"]
ignore = ["E203", "W503"]

# --------------------------------------------------------------------------- #
#  Ruff (isort-like) import-sorting                                           #
# --------------------------------------------------------------------------- #
[tool.ruff.isort]
profile = "black"

# ---------------------------  end pyproject.toml  --------------------------- #
